---
import { getCollection } from "astro:content";
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

import Layout from '../../layouts/Layout.astro';
import TagLabel from '../../components/TagLabel.astro'

export async function getStaticPaths() {
    const prints = (await getCollection('prints'))
    return prints.map((print) => {
        return {
            params: { slug: print.id},
            props: { print },
        };
    });
}

import { colorToColor } from "../../utils/coloring";

const { print } = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/prints/**/*.{webp,jpeg,jpg,png,gif}');

const imagePath = print.data.image[0]
if (!images[imagePath]) throw new Error(`"${imagePath}" does not exist in glob: "src/assets/prints/**/*.{webp,jpeg,jpg,png,gif}"`);

---

<Layout title="Available prints">
	<main>
		<h1>{print.data.name}</h1>
        <section>
            <div class="options" >
                <h2>Taille</h2>gs
                <div class="sizeOptions" >
                    {print.data.size.map(size => {
                        return (
                            <div class="sizeOption" >
                                <div>{size.name}: {size.dimensions} (+{size.price}€)</div>
                            </div>
                        )
                    })}
                </div>
                <h2>Couleurs</h2>
                <div class="colorOptions" >
                    {print.data.colors.map(color => {
                        return (
                            <div class="colorOption" >
                                <span style={`background-color: ${colorToColor(color.name)}`} class="colorDisplay"></span>
                                <div>{color.name} (+{color.price}€)</div>
                            </div>
                        )
                    })}
                </div>
                <div class="tags" >
                    {print.data.tags.map(tag => {
                        return (
                            <TagLabel tag={tag}></TagLabel>
                        )
                    })}
                </div>
            </div>
            <div class="imgs" >
                { print.data.image.map((image) => {
                    return <Image src={images[image]()} alt="The 3d print"></Image>
                }) }
            </div>
        </section>

    </main>
</Layout>

<style>
    h1 {
		color:  var(--white);
		background-color: var(--black);
		text-align: center;
		padding: 20px;
        margin: 0;
	}

    .imgs {
        display: flex;
        flex-wrap: wrap;
    }
    img {
        width: 400px;
        height: 400px;
        object-fit: contain;
    }
    .sizeOption {
        margin-bottom: 5px;
    }
    .colorOption {
        display: flex;
        margin-bottom: 10px;
        align-items: center;
    }
    .colorDisplay {
        display: inline-block;
        width: 40px;
        height: 40px;
        border-radius: 100%;
        margin-right: 10px;
    }

    .options {
        width: 300px;
    }
    section {
        display: flex;
        margin: 0px 80px;
    }

    .tags {
        display: flex;
        a {
            margin: 0px 10px;
        }
    }

</style>
